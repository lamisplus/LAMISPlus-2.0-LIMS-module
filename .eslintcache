[{"/Users/mac/Desktop/Projects/lims-module/src/index.js":"1","/Users/mac/Desktop/Projects/lims-module/src/App.js":"2","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/reportWebVitals.js":"3","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/context/ThemeContext.js":"4","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/PrintManifest.js":"5","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SamplesCollection.js":"6","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/Home.js":"7","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SampleOrderLists.js":"8","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/Result.js":"9","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/AddResults.js":"10","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/context/ThemeDemo.js":"11","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ManifestPrint.js":"12","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/Login.js":"13","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/CreateAManifest.js":"14","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ManifestList.js":"15","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/sampleObj.js":"16","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/api.js":"17","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/PrintResults.js":"18","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SplitActionButton.js":"19","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/pcr.js":"20","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ConfigModal.js":"21","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/AddResultModal.js":"22"},{"size":730,"mtime":1663054739124,"results":"23","hashOfConfig":"24"},{"size":1360,"mtime":1663055168287,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1663054740157,"results":"26","hashOfConfig":"24"},{"size":8947,"mtime":1663054739135,"results":"27","hashOfConfig":"24"},{"size":6196,"mtime":1663239687961,"results":"28","hashOfConfig":"24"},{"size":2975,"mtime":1663239687963,"results":"29","hashOfConfig":"24"},{"size":2832,"mtime":1663239687953,"results":"30","hashOfConfig":"24"},{"size":13363,"mtime":1663239687963,"results":"31","hashOfConfig":"24"},{"size":8072,"mtime":1663332422152,"results":"32","hashOfConfig":"24"},{"size":20002,"mtime":1663239687958,"results":"33","hashOfConfig":"24"},{"size":2920,"mtime":1663054739135,"results":"34","hashOfConfig":"24"},{"size":4651,"mtime":1663239687961,"results":"35","hashOfConfig":"24"},{"size":11106,"mtime":1663239687960,"results":"36","hashOfConfig":"24"},{"size":13862,"mtime":1663239687959,"results":"37","hashOfConfig":"24"},{"size":10827,"mtime":1663239687960,"results":"38","hashOfConfig":"24"},{"size":8880,"mtime":1663054740155,"results":"39","hashOfConfig":"24"},{"size":476,"mtime":1663331901858,"results":"40","hashOfConfig":"24"},{"size":5576,"mtime":1663332357687,"results":"41","hashOfConfig":"24"},{"size":4673,"mtime":1663054740154,"results":"42","hashOfConfig":"24"},{"size":101194,"mtime":1663055168304,"results":"43","hashOfConfig":"24"},{"size":7735,"mtime":1663239687958,"results":"44","hashOfConfig":"24"},{"size":16302,"mtime":1663332185000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1bxw1pn",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/Projects/lims-module/src/index.js",["104"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["105","106"],"/Users/mac/Desktop/Projects/lims-module/src/App.js",["107"],"import React from \"react\";\nimport {\n  //MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\n\nimport Home from './main/webapp/jsx/components/Home'\nimport SampleCollection from './main/webapp/jsx/components/SampleCollection/SamplesCollection';\nimport PrintManifest from './main/webapp/jsx/components/SampleCollection/PrintManifest';\nimport SampleSearch from './main/webapp/jsx/components/SampleCollection/SampleOrderLists';\nimport Result from './main/webapp/jsx/components/SampleCollection/Result'\nimport AddResult from './main/webapp/jsx/components/SampleCollection/AddResults'\n\nexport default function App() {\n  return (\n      <div>\n      <ToastContainer />\n        <Switch>\n         <Route path=\"/result\">\n          <Result />\n         </Route>\n         <Route path=\"/add-result\">\n           <AddResult />\n         </Route>\n         <Route path=\"/print-manifest\">\n             <PrintManifest />\n           </Route>\n         <Route path=\"/create-manifest\">\n            <SampleCollection />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n  );\n}\n\n\n\n\n","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/reportWebVitals.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/context/ThemeContext.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/PrintManifest.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, {useEffect, useCallback, useState, useRef} from 'react';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Alert from 'react-bootstrap/Alert';\n\nimport \"./sample.css\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { forwardRef } from 'react';\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport ManifestPrint from './ManifestPrint';\nimport MatButton from '@material-ui/core/Button'\nimport PrintIcon from '@mui/icons-material/Print';\nimport { useReactToPrint } from 'react-to-print';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SendIcon from '@mui/icons-material/Send';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst PrintManifest = (props) => {\n    let history = useHistory();\n    const sampleObj = history.location && history.location.state ? history.location.state.sampleObj : {}\n    console.log(\"props\",sampleObj)\n    const classes = useStyles();\n    const [loading, setLoading] = useState('')\n    const [collectedSamples, setCollectedSamples] = useState([])\n    const manifestData = []\n    const [saved, setSaved] = useState(false);\n    const [localStore, SetLocalStore] = useState([]);\n    const [send, setSend] = useState(false);\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n      });\n\n    useEffect(() => {\n      const manifests = JSON.parse(localStorage.getItem('manifest'));\n      if (manifests) {\n        SetLocalStore(manifests);\n        localStorage.clear();\n      }else {\n        SetLocalStore(sampleObj)\n      }\n    }, []);\n\n     const sendManifest = async (e) => {\n            e.preventDefault()\n             await axios.get(`${url}lims/ready-manifests/${localStore.id}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\n                .then((resp) => {\n                    console.log(\"sending manifest\", resp)\n                    if (resp.data.errors.length > 0) {\n                        toast.error(resp.data.errors[0].reasons, {\n                            position: toast.POSITION.TOP_RIGHT\n                         });\n                         setSend(true)\n                    }\n                    else {\n                         toast.success(\"Sample manifest sent successfully to PCR Lab.\", {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                        setSend(true)\n                    }\n\n                })\n        }\n\n  return (\n      <div>\n      <Card>\n         <Card.Body>\n         { Object.keys(localStore).length === 0 ?\n               <Alert variant='danger' style={{width:'100%',fontSize:'18px', textAlign: 'center'}}>\n                 <b>Sample Manifest</b> not created yet. pls complete the manifest form.\n               </Alert>\n             :\n            <>\n            <p style={{textAlign: 'right'}}>\n            { localStore.manifestStatus === \"Ready\" ?\n                <MatButton\n                     variant=\"contained\"\n                     color=\"success\"\n                     className={classes.button}\n                     startIcon={<SendIcon />}\n                     disabled={!send ? false : true}\n                     onClick={sendManifest}\n                 >\n                     Send Manifest\n                 </MatButton> : \" \"\n            }\n\n            <MatButton\n                 variant=\"contained\"\n                 color=\"success\"\n                 className={classes.button}\n                 startIcon={<PrintIcon />}\n                 disabled={!send ? false : true}\n                 onClick={handlePrint}\n             >\n                 Print\n             </MatButton>\n\n               <Link color=\"inherit\"\n                 to={{pathname: \"/\"}}\n                  >\n                 <MatButton\n                     variant=\"contained\"\n                     color=\"primary\"\n                     className={classes.button}\n                     startIcon={<HomeIcon />}>\n                     back Home\n                 </MatButton>\n                </Link>\n                  <Link color=\"inherit\"\n                     to={{pathname: \"/result\", state: { manifestObj: localStore }}}\n                      >\n                     <MatButton\n                         variant=\"contained\"\n                         color=\"secondary\"\n                         className={classes.button}\n                         startIcon={<HomeIcon />}>\n                         Results\n                     </MatButton>\n                    </Link>\n               </p>\n            <ManifestPrint sampleObj={localStore} ref={componentRef}/>\n            </>\n            }\n         </Card.Body>\n       </Card>\n    </div>\n  );\n}\n\nexport default PrintManifest;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SamplesCollection.js",["127","128","129","130"],"import React, {useEffect, useCallback, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport SampleOrderLists from './SampleOrderLists';\nimport CreateAManifest from './CreateAManifest';\nimport PrintManifest from './PrintManifest';\nimport Stack from '@mui/material/Stack';\nimport axios from \"axios\";\nimport {token, url } from \"../../../api\";\n\nfunction SampleCollection() {\nconst [activeStep, setActiveStep] = React.useState(0)\nconst [permissions, setPermissions] = useState([]);\n\n useEffect(() => {\n            userPermission();\n          }, []);\n\n        const userPermission =()=>{\n            axios\n                .get(`${url}account`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(\"permission\", response.data.permissions)\n                    setPermissions(response.data.permissions);\n\n                })\n                .catch((error) => {\n                });\n        }\n\nconst nextStep = () => {\n    if (activeStep < 2)\n        setActiveStep((currentStep) => currentStep + 1)\n}\n\nconst previousStep = () => {\n    if (activeStep !== 0)\n       setActiveStep((currentStep) => currentStep - 1)\n}\n\nconst renderContent = (step) => {\n     switch (step) {\n        case 0:\n          return <SampleOrderLists />;\n        case 1:\n          return <CreateAManifest />;\n        case 2:\n          return <PrintManifest />;\n        default:\n          return <div>Not Found</div>;\n      }\n}\nreturn(\n    <div>\n        <Stepper activeStep={activeStep}>\n            <Step>\n                <StepLabel>Select Collected Samples</StepLabel>\n            </Step>\n            <Step>\n                <StepLabel>Complete Manifest Form</StepLabel>\n            </Step>\n            <Step>\n                <StepLabel>Print Manifest</StepLabel>\n            </Step>\n\n        </Stepper>\n        <br />\n        <>\n            {renderContent(activeStep)}\n            <br />\n            <br />\n                { permissions.includes(\"all_permission\") ?\n                    <Stack direction=\"row\" spacing={2}\n                           m={1}\n                           display=\"flex\"\n                           justifyContent=\"flex-end\"\n                           alignItems=\"flex-end\">\n                           <Button variant=\"outlined\" color=\"primary\" onClick={() => previousStep()}\n                           >Previous Step</Button>\n                           {\" \"}\n                           <Button variant=\"outlined\" color=\"primary\" onClick={() => nextStep()}\n                           disabled={activeStep == 2 ? true : false}>Next Step</Button>\n                    </Stack> : \" \" }\n        </>\n    </div>\n);\n}\n\nexport default SampleCollection","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/Home.js",["131","132","133","134","135","136"],"import React, {useState, Fragment, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport SampleCollection from './SampleCollection/SamplesCollection';\nimport ManifestList from './SampleCollection/ManifestList';\nimport {labObj} from './sampleObj'\nimport Login from './SampleCollection/Login'\nimport axios from \"axios\";\nimport {token, url } from \"../../api\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = (props) => {\n    const [key, setKey] = useState('manifest-list');\n\n    const urlTabs = props.location && props.location.state ? props.location.state : null ;\n    const [permissions, setPermissions] = useState([]);\n\n    const userPermission =()=>{\n        axios\n            .get(`${url}account`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                console.log(\"Home_permission\", response.data.permissions)\n                setPermissions(response.data.permissions);\n\n            })\n            .catch((error) => {\n            });\n    }\n\n  useEffect ( () => {\n    userPermission()\n\n    switch(urlTabs){\n      case \"existing-manifest\": return setKey('manifest-list')\n      case \"collect-sample\": return setKey('collection')\n      case \"config\": return setKey('config')\n      default: return setKey('manifest-list')\n    }\n\n  }, [urlTabs]);\n\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                    >\n                       <Tab eventKey=\"manifest-list\" title=\"Manifest List\">\n                         <ManifestList />\n                        </Tab>\n                        {\n                            permissions.includes('create_manifest') || permissions.includes(\"all_permission\") &&\n                            <Tab eventKey=\"collection\" title=\"Create Manifest\">\n                             <SampleCollection />\n                            </Tab>\n                        }\n                        {\n                            permissions.includes('set_configuration') || permissions.includes(\"all_permission\") &&\n                            <Tab eventKey=\"config\" title=\"Configuration\">\n                             <Login />\n                            </Tab>\n                        }\n\n                    </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SampleOrderLists.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, {useEffect, useCallback, useState} from 'react';\nimport Container from '@mui/material/Container';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport {Label, Input, FormGroup} from \"reactstrap\"\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./sample.css\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport {format} from \"date-fns\";\n\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\nimport { DateRangePicker } from '@mui/x-date-pickers-pro/DateRangePicker';\n\nimport { forwardRef } from 'react';\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst SampleSearch = (props) => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState('')\n    const [collectedSamples, setCollectedSamples] = useState([])\n    const samples = [];\n    const [ dateFilter, setDateFilter] = useState({\n        startDate: null,\n        endDate: null\n    })\n\n    const [value, setValue] = React.useState([null, null]);\n\n     let start_date = value[0] != null ? value[0].$d : null;\n     let end_date = value[1] != null ? value[1].$d : null;\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setDateFilter({...dateFilter, [name]: value})\n    }\n\n     const loadLabTestData = useCallback(async () => {\n            try {\n                const response = await axios.get(`${url}lims/collected-samples/`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                //console.log(\"samples\", response);\n                setCollectedSamples(response.data);\n                setLoading(false)\n                localStorage.clear();\n\n            } catch (e) {\n                toast.error(\"An error occurred while fetching lab\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n                setLoading(false)\n            }\n        }, []);\n\n     useEffect(() => {\n     setLoading('true');\n         const onSuccess = () => {\n             setLoading(false)\n         }\n         const onError = () => {\n             setLoading(false)\n         }\n\n         loadLabTestData();\n\n     }, [loadLabTestData]);\n\n     const calculate_age = dob => {\n             var today = new Date();\n             var birthDate = new Date(dob);\n             var age_now = today.getFullYear() - birthDate.getFullYear();\n             return age_now\n\n           };\n\n     const handleSampleChanges = (sample) => {\n        sample.filter((item) => {\n            var i = samples.findIndex(x => (x.patientId === item.patientId && x.sampleId === item.sampleId && x.sampleType === item.sampleType));\n            if(i <= -1){\n                    //console.log(\"items\", item)\n\n                    samples.push({\n                      patientID: [{\n                          idNumber: item.patientId,\n                          idTypeCode: item.typecode\n                      }],\n                      firstName: item.firstname,\n                      surName: item.surname,\n                      sex: item.sex,\n                      pregnantBreastFeedingStatus: \"\",\n                      age: 0,\n                      dateOfBirth: item.dob,\n                      age: item.age,\n                      sampleID: item.sampleId,\n                      sampleType: item.sampleType,\n                      indicationVLTest: 1,\n                      artCommencementDate: \"\",\n                      drugRegimen: \"\",\n                      sampleOrderedBy: item.orderby,\n                      sampleOrderDate: item.orderbydate,\n                      sampleCollectedBy: item.collectedby,\n                      sampleCollectionDate: item.datecollected,\n                      sampleCollectionTime: item.timecollected,\n                      dateSampleSent: format(new Date(), 'yyyy-MM-dd'),\n                      id: 0,\n                      manifestID: 0,\n                      pid: 0,\n                      priority: 0,\n                  });\n\n                  localStorage.setItem('samples', JSON.stringify(samples));\n\n              }\n             return null;\n        })\n\n     }\n\n  return (\n      <div>\n      <Card>\n         <Card.Body>\n            <Grid container spacing={2}>\n                 <LocalizationProvider\n                  dateAdapter={AdapterDayjs}\n                  localeText={{ start: 'Start-Date', end: 'End-Date' }}\n                >\n                  <DateRangePicker\n                    value={value}\n                    onChange={(newValue) => {\n                      setValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </React.Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n\n           {/*   <Grid item xs={2}>\n                   <FormGroup>\n                       <Label for=\"startDate\" className={classes.label}>Start date</Label>\n\n                       <Input\n                           type=\"date\"\n                           name=\"startDate\"\n\n                           id=\"startDate\"\n                           placeholder=\"Start Date\"\n                           onChange={handleChange}\n                           className={classes.input}\n                       />\n                   </FormGroup>\n              </Grid>\n              <Grid item xs={2}>\n                    <FormGroup>\n                      <Label for=\"endDate\" className={classes.label}>End date</Label>\n\n                      <Input\n                          type=\"date\"\n                          name=\"endDate\"\n\n                          id=\"endDate\"\n                          placeholder=\"End Date\"\n                          onChange={handleChange}\n                          className={classes.input}\n                      />\n                  </FormGroup>\n              </Grid>\n\n              <Grid item xs={2}>\n\n              </Grid>\n              */}\n            </Grid>\n          <br />\n          <MaterialTable\n           icons={tableIcons}\n              title=\"Sample Collection List\"\n              columns={[\n                  { title: \"Type code\", field: \"typecode\" },\n                  { title: \"Hospital ID\", field: \"patientId\" },\n                  { title: \"First Name\", field: \"firstname\" },\n                  { title: \"Surname\", field: \"surname\" },\n                  { title: \"Sex\", field: \"sex\" },\n                  { title: \"DOB\", field: \"dob\" },\n                  { title: \"Age\", field: \"age\" },\n                  {\n                    title: \"Test Type\",\n                    field: \"testType\",\n                  },\n                  { title: \"Sample ID\", field: \"sampleId\" },\n                  {\n                    title: \"Sample Type\",\n                    field: \"sampleType\",\n                  },\n                  { title: \"Sample Orderby\", field: \"orderby\" },\n                  { title: \"Orderby Date\", field: \"orderbydate\", type: \"date\" , filtering: false },\n                  { title: \"Collected By\", field: \"collectedby\" },\n                  { title: \"Date Collected\", field: \"datecollected\", type: \"date\" , filtering: false},\n                  { title: \"Time Collected\", field: \"timecollected\", type: \"time\" , filtering: false},\n\n              ]}\n              isLoading={loading}\n              data={ collectedSamples.filter( row => {\n                   let filterPass = true\n\n                   const date = new Date(row.sampleCollectionDate)\n\n                   if (start_date != null) {\n                     filterPass = filterPass && (new Date(start_date) <= date)\n                   }\n                   if (end_date != null) {\n                     filterPass = filterPass && (new Date(end_date) >= date)\n                   }\n                   return filterPass\n              }).map((row) => (\n                    {\n                      typecode: row.patientID.idTypeCode,\n                      patientId: row.patientID.idNumber,\n                      firstname: row.firstName,\n                      surname: row.surName,\n                      sex: row.sex,\n                      dob: row.dateOfBirth,\n                      age: calculate_age(row.dateOfBirth),\n                      testType: \"VL\",\n                      sampleId: row.sampleID,\n                      sampleType: row.sampleType,\n                      orderby: row.sampleOrderedBy,\n                      orderbydate: row.sampleOrderDate,\n                      collectedby: row.sampleCollectedBy,\n                      datecollected: row.sampleCollectionDate,\n                      timecollected: row.sampleCollectionTime\n                    })\n              )}\n\n                  options={{\n                    headerStyle: {\n                        backgroundColor: \"#014d88\",\n                        color: \"#fff\",\n                        fontSize:'16px',\n                        padding:'10px'\n                    },\n                    searchFieldStyle: {\n                        width : '300%',\n                        margingLeft: '250px',\n                    },\n                    selection: true,\n                    filtering: false,\n                    exportButton: false,\n                    searchFieldAlignment: 'left',\n                    pageSizeOptions:[10,20,100],\n                    pageSize:5,\n                    debounceInterval: 400\n                }}\n                 onSelectionChange={(rows) => handleSampleChanges(rows)}\n          />\n         </Card.Body>\n       </Card>\n    </div>\n  );\n}\n\nexport default SampleSearch;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/Result.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/AddResults.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import React, {useEffect, useCallback, useState, useRef, forwardRef} from 'react';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\nimport MaterialTable from 'material-table';\nimport MatButton from '@material-ui/core/Button';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SaveIcon from '@material-ui/icons/Save'\nimport Alert from 'react-bootstrap/Alert';\nimport {format} from \"date-fns\";\n\nimport { CardBody,\n    Form, FormFeedback, FormGroup, FormText,\n    Input,\n    Label, Badge\n} from 'reactstrap';\n\nimport \"./sample.css\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst AddResult = (props) => {\n    let history = useHistory();\n    const manifestObj = history.location && history.location.state ? history.location.state.manifestObj : {}\n    const permissions = history.location && history.location.state ? history.location.state.permissions : []\n    const sampleIDs = []\n    manifestObj.sampleInformation.map((e) => {\n        sampleIDs.push(e.sampleID)\n    })\n\n    //console.log(\"maniObj\",manifestObj)\n    //console.log(\"permissions\",permissions)\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true)\n    const [results, setResults] = useState({\n         manifestID: manifestObj.manifestID,\n         receivingFacilityID: manifestObj.receivingLabID,\n         receivingFacilityName: manifestObj.receivingLabName,\n         sendingPCRLabID: manifestObj.sendingFacilityID,\n         sendingPCRLabName: manifestObj.sendingFacilityName,\n         testType: \"Viral Load\",\n         samples: []\n    })\n\n    const [initialValue, SetInitialValue] = useState(0)\n\n    const [inputFields, setInputFields] = useState([{\n        manifestRecordID: manifestObj.id,\n        dateResultDispatched: \"\",\n        dateSampleReceivedAtPcrLab: \"\",\n        testResult: \"\",\n        resultDate: \"\",\n        pcrLabSampleNumber: \"\",\n        approvalDate: \"\",\n        assayDate: \"\",\n        sampleTestable: \"\",\n        sampleStatus: \"\",\n        sampleID: sampleIDs[initialValue],\n        uuid: \"\",\n        visitDate: format(new Date(), 'yyyy-MM-dd'),\n    }])\n\n     const handleChange = (i, event) => {\n           let data = [...inputFields]\n           const { name, value } = event.target\n           data[i].manifestRecordID = manifestObj.id\n           data[i][name] = value\n           data[i].uuid = \"\"\n           data[i].visitDate = format(new Date(), 'yyyy-MM-dd')\n\n           setInputFields(data)\n     }\n\n     const handleSubmit = async (e) => {\n         e.preventDefault()\n         console.log(\"inputFields\",inputFields)\n         try {\n             console.log(inputFields)\n\n              await axios.post(`${url}lims/results`, inputFields,\n                 { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\n                     console.log(\"results\", resp)\n\n                     toast.success(\"PCR Sample results added successfully!!\", {\n                         position: toast.POSITION.TOP_RIGHT\n                     });\n\n                 });\n                 history.push(\"/\");\n             } catch (e) {\n                toast.error(\"An error occurred while adding PCR Sample results\", {\n                     position: toast.POSITION.TOP_RIGHT\n                 });\n             }\n         }\n\n     const addField = (e) => {\n        e.preventDefault()\n        SetInitialValue(initialValue+1)\n\n        console.log(initialValue)\n        console.log(sampleIDs)\n        console.log(sampleIDs[initialValue])\n\n        if (initialValue > 0) {\n            let newField = {\n                   testResult: \"\",\n                   resultDate: \"\",\n                   pcrLabSampleNumber: \"\",\n                   approvalDate: \"\",\n                   assayDate: \"\",\n                   sampleTestable: \"\",\n                   sampleStatus: \"\",\n                   sampleID: sampleIDs[initialValue]\n               }\n\n          if (initialValue < sampleIDs.length) {\n               setInputFields([...inputFields, newField])\n          }else{\n            toast.error(\"Manifest has no sample Id\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n          }\n\n        }\n\n     }\n\n     const removeField = (index, e) => {\n        e.preventDefault()\n        SetInitialValue(initialValue-1)\n        let data = [...inputFields];\n            data.splice(index, 1)\n            setInputFields(data)\n     }\n\n  return (\n    <div>\n      <Card>\n         <Card.Body>\n\n          <p style={{textAlign: 'right'}}>\n          <Link color=\"inherit\"\n            to={{pathname: \"/\"}}\n             >\n            <MatButton\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<HomeIcon />}>\n                back Home\n            </MatButton>\n           </Link>\n          </p>\n           <hr />\n           <Form>\n                 <Alert style={{width:'100%',fontSize:'16px', backgroundColor: '#014d88', color: \"#fff\", textAlign: 'center'}}>\n                        <Alert.Heading>Basic Manifest Information</Alert.Heading>\n                 </Alert>\n                <Row>\n                  <Col> <FormGroup>\n                       <Label for=\"manifestID\" className={classes.label}>Manifest Id</Label>\n\n                       <Input\n                           type=\"text\"\n                           name=\"manifestID\"\n                           id=\"manifestID\"\n                           placeholder=\"manifest ID\"\n                           className={classes.input}\n                           onChange={handleChange}\n                           value={manifestObj.manifestID}\n                           disabled\n                       />\n                   </FormGroup></Col>\n                  <Col><FormGroup>\n                   <Label for=\"testType\" className={classes.label}>Test Type</Label>\n\n                   <Input\n                       type=\"text\"\n                       name=\"testType\"\n                       id=\"testType\"\n                       placeholder=\"Test Type\"\n                       className={classes.input}\n                       onChange={handleChange}\n                       value=\"Viral Load  \"\n                   />\n               </FormGroup></Col>\n                  <Col></Col>\n                  <Col></Col>\n                </Row>\n              <Row>\n                <Col><FormGroup>\n                     <Label for=\"sendingPCRLabName\" className={classes.label}>Facility</Label>\n\n                     <Input\n                         type=\"text\"\n                         name=\"sendingPCRLabName\"\n                         id=\"sendingPCRLabName\"\n                         placeholder=\"Sending PCR LabName\"\n                         className={classes.input}\n                         onChange={handleChange}\n                         value={manifestObj.sendingFacilityName}\n                         disabled\n                     />\n                 </FormGroup></Col>\n                <Col><FormGroup>\n                     <Label for=\"sendingPCRLabID\" className={classes.label}>Facility ID</Label>\n\n                     <Input\n                         type=\"text\"\n                         name=\"sendingPCRLabID\"\n                         id=\"sendingPCRLabID\"\n                         placeholder=\"Sending PCR Lab ID\"\n                         className={classes.input}\n                         onChange={handleChange}\n                         value={manifestObj.sendingFacilityID}\n                         disabled\n                     />\n                 </FormGroup></Col>\n                <Col> <FormGroup>\n                     <Label for=\"receivingFacilityName\" className={classes.label}>Receiving Facility</Label>\n\n                     <Input\n                         type=\"text\"\n                         name=\"receivingFacilityName\"\n                         id=\"receivingFacilityName\"\n                         placeholder=\"Receiving Facility Name\"\n                         className={classes.input}\n                         onChange={handleChange}\n                         value={manifestObj.receivingLabName}\n                         disabled\n                     />\n                 </FormGroup></Col>\n                <Col><FormGroup>\n                     <Label for=\"receivingFacilityID\" className={classes.label}>Receiving Facility ID</Label>\n\n                     <Input\n                         type=\"text\"\n                         name=\"receivingFacilityID\"\n                         id=\"receivingFacilityID\"\n                         placeholder=\"Receiving Facility ID\"\n                         className={classes.input}\n                         onChange={handleChange}\n                         value={manifestObj.receivingLabID}\n                         disabled\n                     />\n                 </FormGroup></Col>\n              </Row>\n              <br />\n                <Alert style={{width:'100%',fontSize:'16px', backgroundColor: '#992E62', color: \"#fff\", textAlign: 'center'}}>\n                  <Alert.Heading>PCR Sample Details</Alert.Heading>\n               </Alert>\n               {\n                    manifestObj.sampleInformation.length > 0 && inputFields.map((data, i) => (\n                    <>\n                          <Row>\n                             <Col>\n                              <FormGroup>\n                                    <Label for=\"sampleID\" className={classes.label}>Sample ID *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"sampleID\"\n                                        id=\"sampleID\"\n                                        className={classes.input}\n                                        onChange={ e => handleChange(i, e)}\n                                    >\n                                     <option hidden>\n                                         Select Sample Id\n                                     </option>\n                                     { sampleIDs && sampleIDs.map((sample, i) =>\n                                     <option key={i} value={sample} >{sample}</option>)}\n                                    </Input>\n                                </FormGroup>\n                             </Col>\n                              <Col>\n                               <FormGroup>\n                                     <Label for=\"surName\" className={classes.label}>Sample Testable *</Label>\n                                     <Input\n                                         type=\"select\"\n                                         name=\"sampleTestable\"\n                                         id=\"sampleTestable\"\n                                         className={classes.input}\n                                         onChange={ e => handleChange(i, e)}\n                                     >\n                                      <option hidden>\n                                          Is Sample Testable ?\n                                      </option>\n                                      <option value=\"true\" >True</option>\n                                      <option value=\"false\" >False</option>\n                                     </Input>\n                                 </FormGroup>\n                              </Col>\n\n                             <Col>\n                               <FormGroup>\n                                     <Label for=\"sampleStatus\" className={classes.label}>Sample Status *</Label>\n                                     <Input\n                                         type=\"select\"\n                                         name=\"sampleStatus\"\n                                         id=\"sampleStatus\"\n                                         className={classes.input}\n                                         onChange={ e => handleChange(i, e)}\n                                     >\n                                      <option hidden>\n                                          Select Sample status\n                                      </option>\n                                      <option value=\"1\" >Completed</option>\n                                      <option value=\"2\" >Rejected</option>\n                                      <option value=\"3\" >In-Progress</option>\n                                      <option value=\"4\" >Re-run</option>\n                                     </Input>\n                                 </FormGroup>\n                              </Col>\n                            <Col> <FormGroup>\n                                 <Label for=\"assayDate\" className={classes.label}>Assay Date *</Label>\n\n                                 <Input\n                                     type=\"date\"\n                                     name=\"assayDate\"\n                                     id=\"assayDate\"\n                                     placeholder=\"Assay Date\"\n                                     className={classes.input}\n                                     onChange={e => handleChange(i, e)}\n                                 />\n                             </FormGroup></Col>\n                          </Row>\n                            <Row>\n                              <Col><FormGroup>\n                                   <Label for=\"dateSampleReceivedAtPcrLab\" className={classes.label}>Date sample at PCR Lab *</Label>\n\n                                   <Input\n                                       type=\"date\"\n                                       name=\"dateSampleReceivedAtPcrLab\"\n                                       id=\"dateSampleReceivedAtPcrLab\"\n                                       placeholder=\"result Date\"\n                                       className={classes.input}\n                                       onChange={e => handleChange(i, e)}\n                                   />\n                               </FormGroup></Col>\n                               <Col><FormGroup>\n                                <Label for=\"dateResultDispatched\" className={classes.label}>Date Result Dispatched *</Label>\n\n                                <Input\n                                    type=\"date\"\n                                    name=\"dateResultDispatched\"\n                                    id=\"dateResultDispatched\"\n                                    placeholder=\"result Date\"\n                                    className={classes.input}\n                                    onChange={e => handleChange(i, e)}\n                                />\n                            </FormGroup></Col>\n                            <Col>\n                             <FormGroup>\n                                 <Label for=\"approvalDate\" className={classes.label}>Approval Date *</Label>\n\n                                 <Input\n                                     type=\"date\"\n                                     name=\"approvalDate\"\n                                     id=\"approvalDate\"\n                                     placeholder=\"Approval Date\"\n                                     className={classes.input}\n                                     onChange={e => handleChange(i, e)}\n                                 />\n                             </FormGroup></Col>\n                              <Col><FormGroup>\n                                  <Label for=\"pcrLabSampleNumber\" className={classes.label}>Pcr Lab Sample No *</Label>\n\n                                  <Input\n                                      type=\"text\"\n                                      name=\"pcrLabSampleNumber\"\n                                      id=\"pcrLabSampleNumber\"\n                                      placeholder=\"Pcr Lab Sample Number\"\n                                      className={classes.input}\n                                      onChange={e => handleChange(i, e)}\n                                  />\n                              </FormGroup></Col>\n                          </Row>\n                        <Row>\n                          <Col><FormGroup>\n                             <Label for=\"resultDate\" className={classes.label}>Result Date *</Label>\n\n                             <Input\n                                 type=\"date\"\n                                 name=\"resultDate\"\n                                 id=\"resultDate\"\n                                 placeholder=\"result Date\"\n                                 className={classes.input}\n                                 onChange={e => handleChange(i, e)}\n                             />\n                         </FormGroup></Col>\n                          <Col><FormGroup>\n                             <Label for=\"testResult\" className={classes.label}>Test result *</Label>\n\n                             <Input\n                                 type=\"text\"\n                                 name=\"testResult\"\n                                 id=\"testResult\"\n                                 placeholder=\"Test result\"\n                                 className={classes.input}\n                                 onChange={e => handleChange(i, e)}\n                             />\n                         </FormGroup></Col>\n                         <Col></Col>\n                         <Col></Col>\n                        </Row>\n\n                        <Row>\n                            <Col style={{textAlign: 'right'}}>\n                                <Button variant=\"contained\" color=\"error\"\n                                   startIcon={<DeleteIcon />} onClick={ e => removeField(i, e)} >\n                                 Remove PCR Sample\n                               </Button>\n                            </Col>\n                        </Row>\n                        <hr />\n                    </>\n                    ))\n               }\n               { permissions.includes(\"all_permission\") ? <Button variant=\"contained\" color=\"secondary\"\n                      startIcon={<AddIcon />} onClick={addField}>\n                    Add More\n                  </Button> : \" \"}\n                  {\" \"}\n\n                { permissions.includes(\"all_permission\") ? <Button variant=\"contained\" color=\"primary\" type=\"submit\"\n                   startIcon={<SaveIcon />} onClick={handleSubmit} >\n                 Save Result\n               </Button> : \" \"}\n           </Form>\n\n         </Card.Body>\n       </Card>\n    </div>\n  );\n}\n\nexport default AddResult;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/context/ThemeDemo.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ManifestPrint.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, {useEffect, useCallback, useState} from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport {logo} from './pcr'\n\nimport {  Modal, ModalHeader, ModalBody,\n    Row, Col,Input,\n    FormGroup,\n    Label,Card, CardBody, Table\n} from 'reactstrap';\n\nlet today = new Date().toLocaleDateString('en-us', { weekday:\"long\", year:\"numeric\", month:\"short\", day:\"numeric\"})\n\nclass ManifestPrint extends React.Component {\n  render() {\n    //console.log(this.props.sampleObj)\n    return (\n             <Card>\n              <CardBody>\n               <Row>\n                  <span>{today}</span>\n                     <Table size=\"sm\">\n                          <tbody>\n                               <tr>\n                                  <th scope=\"row\"></th>\n\n                                  <th scope=\"row\"></th>\n\n                                  <th scope=\"row\" className=\"text-center\">\n                                    <img src={logo} style={{width: \"80px\", height: \"80px\"}}/>\n                                  </th>\n\n                                </tr>\n                                <tr>\n                                  <th scope=\"row\"></th>\n\n                                  <th scope=\"row\"><h2 className=\"text-center\">NISRN TRANSPORTATION MANIFEST</h2></th>\n\n                                  <th scope=\"row\"></th>\n\n                                </tr>\n                          </tbody>\n                        </Table>\n                  </Row>\n                <br/>\n                <br />\n            <Row>\n                   <Table bordered size=\"sm\">\n                      <tbody>\n                           <tr>\n                              <th scope=\"row\">Pick Up Date:</th>\n                              <td>{this.props.sampleObj.dateScheduledForPickup === null ? \" \" : this.props.sampleObj.dateScheduledForPickup?.replace(\"T\", \" \")}</td>\n                              <th scope=\"row\">Destination:</th>\n                              <td>{this.props.sampleObj.receivingLabName}</td>\n                              <th scope=\"row\">PCR Lab Number:</th>\n                              <td>{this.props.sampleObj.receivingLabID}</td>\n                            </tr>\n                            <tr>\n                              <th scope=\"row\">Status:</th>\n                              <td>{this.props.sampleObj.manifestStatus}</td>\n                              <th scope=\"row\">Manifest Id:</th>\n                              <td>{this.props.sampleObj.manifestID}</td>\n                              <th scope=\"row\">Sample Temperature:</th>\n                              <td>{this.props.sampleObj.temperatureAtPickup}</td>\n                            </tr>\n                             <tr>\n                              <th scope=\"row\">Courier Name:</th>\n                              <td>{this.props.sampleObj.courierRiderName}</td>\n                              <th scope=\"row\">Courier Contact:</th>\n                              <td>{this.props.sampleObj.courierContact}</td>\n                              <th scope=\"row\">Test Type:</th>\n                              <td>VL</td>\n                            </tr>\n                      </tbody>\n                    </Table>\n              </Row>\n              <br/>\n              <Row>\n                     <Table striped bordered size=\"sm\">\n                        <thead style={{  backgroundColor:'#014d88', color:'#fff' }}>\n                          <tr>\n                            <th>Facility</th>\n                            <th>Patient ID</th>\n                            <th>Sample ID</th>\n                            <th>Sample Type</th>\n                            <th>Date Collected</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                            { this.props.sampleObj.sampleInformation && this.props.sampleObj.sampleInformation.map((data, i) => (\n                                 <tr key={i}>\n                                    <td scope=\"row\">{this.props.sampleObj.sendingFacilityName}</td>\n                                    <td>{data.patientID[0].idNumber}</td>\n                                    <td>{data.sampleID}</td>\n                                    <td>{data.sampleType}</td>\n                                    <td>{data.sampleCollectionDate}</td>\n                                  </tr>\n                            ))}\n                        </tbody>\n                      </Table>\n                </Row>\n                <br />\n                <span>LAMISPlus 2.0</span>\n              </CardBody>\n             </Card>\n      );\n  }\n}\n\nexport default ManifestPrint;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/Login.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, {useEffect, useCallback, useState, useRef, forwardRef} from 'react';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\nimport MaterialTable from 'material-table';\nimport MatButton from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save'\nimport HomeIcon from '@mui/icons-material/Home';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport Alert from 'react-bootstrap/Alert';\nimport AddResultModal from './AddResultModal';\n\nimport { CardBody,\n    Form, FormFeedback, FormGroup, FormText,\n    Input,\n    Label, Badge, Spinner\n} from 'reactstrap';\n\nimport \"./sample.css\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport CachedIcon from '@mui/icons-material/Cached';\n\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst Login = (props) => {\n    let history = useHistory();\n    const manifestObj = history.location && history.location.state ? history.location.state.manifestObj : {}\n    //console.log(\"maniObj\",manifestObj)\n    const permissions = history.location && history.location.state ? history.location.state.permissions : []\n\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true)\n    const [login, setLogin] = useState({\n        configName: \"\",\n        serverUrl: \"\",\n        configEmail: \"\",\n        configPassword: \"\"\n    })\n\n    const [logins, setLogins] = useState([])\n\n    const loadResults = useCallback(async () => {\n        try {\n            const response = await axios.get(`${url}lims/configs`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            //console.log(\"configs\", response);\n            setLogins(response.data)\n            setLoading(false)\n\n        } catch (e) {\n            toast.error(\"An error occurred while fetching config details\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            setLoading(false)\n        }\n    }, []);\n\n    useEffect(() => {\n        loadResults()\n    }, [loadResults]);\n\n    const handleChange = (event) => {\n           const { name, value } = event.target\n           setLogin({ ...login, [name] : value})\n     }\n\n     const handleSubmit = async (e) => {\n         e.preventDefault()\n         try {\n             await axios.post(`${url}lims/configs`, login,\n                { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\n                    console.log(\"login details\", resp)\n\n                    toast.success(\"LIMS Credentials saved successfully!!\", {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n\n                     setLogin({\n                         configName: \"\",\n                         serverUrl: \"\",\n                         configEmail: \"\",\n                         configPassword: \"\"\n                     })\n                });\n\n            loadResults()\n\n        } catch (e) {\n            toast.error(\"An error occurred while saving LIMS Credentials\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            setLoading(false)\n        }\n        history.push(\"/\");\n     }\n\n     const deleteConfig = async (e, id) => {\n      e.preventDefault();\n        try {\n            const response = await axios.delete(`${url}lims/configs/${id}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            console.log(\" delete config\", response);\n            loadResults()\n            toast.success(\"LIMS Credentials deleted successfully!!\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n        } catch (e) {\n            toast.error(\"An error occurred while deleting a config\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            setLoading(false)\n        }\n     }\n\n\n  return (\n    <div>\n      <Card>\n         <Card.Body>\n             <hr />\n              {\n                <>\n                   <Alert style={{width:'100%',fontSize:'16px', backgroundColor: '#014d88', color: \"#fff\", textAlign: 'center'}}>\n                           <Alert.Heading>LIMS Configuration Details</Alert.Heading>\n                    </Alert>\n\n                   <Row>\n                        <Col xs={6} md={4}>\n\n                            <Form>\n                                 <FormGroup>\n                                   <Label for=\"configName\" className={classes.label}>Configuration Name</Label>\n                                   <Input\n                                       type=\"select\"\n                                       name=\"configName\"\n                                       id=\"configName\"\n                                       className={classes.input}\n                                       onChange={handleChange}\n                                       value={login.configName}\n                                   >\n                                    <option hidden>\n                                        Select Configuration Name\n                                    </option>\n                                    <option value=\"Demo Server\">\n                                        Demo Server\n                                    </option>\n                                    <option value=\"Live Server\">\n                                        Live Server\n                                    </option>\n                                   </Input>\n                               </FormGroup>\n                               <FormGroup>\n                                  <Label for=\"serverUrl\" className={classes.label}>URL</Label>\n\n                                  <Input\n                                      type=\"text\"\n                                      name=\"serverUrl\"\n                                      id=\"serverUrl\"\n                                      placeholder=\"Server URL\"\n                                      className={classes.input}\n                                      onChange={handleChange}\n                                      value={login.serverUrl}\n                                  />\n                              </FormGroup>\n                                <FormGroup>\n                                   <Label for=\"configEmail\" className={classes.label}>Email</Label>\n\n                                   <Input\n                                       type=\"text\"\n                                       name=\"configEmail\"\n                                       id=\"configEmail\"\n                                       placeholder=\"E-Mail\"\n                                       className={classes.input}\n                                       onChange={handleChange}\n                                       value={login.configEmail}\n                                   />\n                               </FormGroup>\n\n                               <FormGroup>\n                                  <Label for=\"configPassword\" className={classes.label}>Password</Label>\n\n                                  <Input\n                                      type=\"password\"\n                                      name=\"configPassword\"\n                                      id=\"configPassword\"\n                                      placeholder=\"configuration password\"\n                                      className={classes.input}\n                                      onChange={handleChange}\n                                      value={login.configPassword}\n                                  />\n                              </FormGroup>\n                              <Button variant=\"contained\" color=\"primary\" type=\"submit\"\n                                 startIcon={<SaveIcon />} onClick={handleSubmit} >\n                               Save\n                             </Button>\n                            </Form>\n                        </Col>\n                        <Col xs={6} md={8}>\n                            <Table bordered size=\"sm\" responsive>\n                                <thead style={{  backgroundColor:'#014d88', color:'#fff', textAlign: 'center' }}>\n                                    <tr>\n                                        <th>S/N</th>\n                                        <th>Configuration Name</th>\n                                        <th>URL</th>\n                                        <th>Email</th>\n                                        <th>Created Date</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody style={{ textAlign: 'center' }}>\n                                { logins && logins.map((data, i) => (\n                                     <tr key={i}>\n                                        <td>{++i}</td>\n                                        <td>{data.configName}</td>\n                                        <td>{data.serverUrl}</td>\n                                        <td>{data.configEmail}</td>\n                                        <td>09/09/2022</td>\n                                        <td>\n                                        <Button variant=\"contained\" color=\"error\"\n                                             startIcon={<DeleteIcon />} onClick={ e => deleteConfig( e, data.id)}>\n                                         </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </Table>\n                        </Col>\n                   </Row>\n                </>\n              }\n\n         </Card.Body>\n       </Card>\n    </div>\n  );\n}\n\nexport default Login;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/CreateAManifest.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, {useEffect, useCallback, useState} from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport ConfigModal from './ConfigModal';\nimport Alert from 'react-bootstrap/Alert';\nimport PhoneInput from 'react-phone-input-2'\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {  Modal, ModalHeader, ModalBody, Row,\n    Col, Card, CardBody, Table,\n    Form, FormFeedback, FormGroup, FormText,\n    Input,\n    Label, Badge\n} from 'reactstrap';\n\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { pcr_lab } from './pcr';\nimport SendIcon from '@mui/icons-material/Send';\nimport SaveIcon from '@material-ui/icons/Save'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst CreateAManifest = (props) => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState('')\n    const [collectedSamples, setCollectedSamples] = useState([])\n    const samples = []\n    const [saved, setSaved] = useState(false);\n    const [send, setSend] = useState(false);\n    const [localStore, SetLocalStore] = useState([]);\n    const [manifestsId, setManifestsId] = useState(0);\n    const [status, setStatus] = useState(\"Pending\")\n    const [validate, setValidate] = useState({\n        dateScheduledForPickupSucess: false,\n        dateScheduledForPickupFail: false,\n        temperatureAtPickup: false,\n        receivingLabID: \"\",\n        receivingLabName: \"\",\n        courierRiderName: \"\",\n        courierContact: \"\"\n    })\n\n    const [open, setOpen] = useState(false)\n\n    const handleOpen = () => setOpen(true);\n\n    const toggleModal = () => setOpen(!open)\n\n    useEffect(() => {\n      const collectedSamples = JSON.parse(localStorage.getItem('samples'));\n      if (collectedSamples) {\n        SetLocalStore(collectedSamples);\n      }\n    }, []);\n\n    const [pcrLabCode, setPcrLabCode] = useState({ name: \"\", labNo: \"\"});\n\n    const [manifestData, setManifestData] = useState({\n\n         manifestID: \"\",\n         manifestStatus: \"Pending\",\n         sendingFacilityID: \"FH7LMnbnVlT\",\n         sendingFacilityName: \"CHC ZUNGERU\",\n         receivingLabID: pcrLabCode.labNo,\n         receivingLabName: pcrLabCode.name,\n         dateScheduledForPickup: \"\",\n         temperatureAtPickup: \"\",\n         samplePackagedBy: \"\",\n         courierRiderName: \"\",\n         courierContact: \"\",\n         createDate: \"\",\n         sampleInformation: localStore,\n         id: 0,\n         uuid: \"\"\n     })\n\n\n    const handleChange = (event) => {\n           checkPCRLab(event.target.value)\n           const { name, value } = event.target\n           setManifestData({ ...manifestData, [name]: value, receivingLabID: pcrLabCode.labNo,\n           receivingLabName: pcrLabCode.name, sampleInformation: localStore })\n     }\n\n    const checkPCRLab = (name) => {\n        pcr_lab.map(( val ) => {\n            if (val.name === name) {\n                setPcrLabCode({name: val.name, labNo: val.labNo})\n            }\n        })\n    }\n\n   const validateInputs = (manifestData) => {\n        //console.log(\"mani\",manifestData)\n        if (manifestData.dateScheduledForPickup.length === 0) {\n            validate.dateScheduledForPickupFail = true;\n        }\n\n        setValidate({validate})\n       //console.log(\"after\",validate)\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        validateInputs(manifestData)\n\n        console.log(\"xxx\",manifestData);\n\n        if (manifestData.dateScheduledForPickup.length === 0) {\n             toast.error(\"Sample Pick up date can not be empty\", {\n                position: toast.POSITION.TOP_RIGHT\n             });\n        }\n\n        if ( manifestData.receivingLabName.length === 0) {\n             toast.error(\"Receiving lab can not be empty\", {\n                position: toast.POSITION.TOP_RIGHT\n             });\n        }\n        else{\n               await axios.post(`${url}lims/manifests`, manifestData,\n                { headers: {\"Authorization\" : `Bearer ${token}`}}).then(resp => {\n                    setManifestsId(resp.data.id)\n                     console.log(\"response\", resp)\n                    setSaved(true);\n                    toast.success(\"Sample manifest saved successfully!!\", {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                    manifestData.manifestID = resp.data.manifestID\n                    manifestData.sendingFacilityID = resp.data.sendingFacilityID\n                    manifestData.sendingFacilityName = resp.data.sendingFacilityName\n\n                    localStorage.setItem('manifest', JSON.stringify(manifestData));\n                    localStorage.removeItem(\"samples\");\n                    handleOpen()\n                });\n        }\n    }\n\n  return (\n      <>\n        <Card>\n            <CardBody>\n             <br/>\n             { localStore.length === 0 ?\n                <Alert variant='danger' style={{width:'100%',fontSize:'18px', textAlign: 'center'}}>\n                  <b>Manifest</b> has no sample logged. pls use the previous button to add samples.\n                </Alert>\n              :\n                <Form>\n                    <Row>\n                        <Col> <FormGroup>\n                         <Label for=\"dateScheduledForPickup\" className={classes.label}>Date & Time *</Label>\n                         <Input\n                             type=\"datetime-local\"\n                             name=\"dateScheduledForPickup\"\n                             id=\"dateScheduledForPickup\"\n                             placeholder=\"Date & Time Created\"\n                             className={classes.input}\n                             value={manifestData.dateScheduledForPickup}\n                             onChange={handleChange}\n\n                         />\n                          <FormText>Pick up date is a required field.</FormText>\n                     </FormGroup></Col>\n                        <Col><FormGroup>\n                         <Label for=\"receivingLabName\" className={classes.label}>Receiving Lab *</Label>\n                         <Input\n                             type=\"select\"\n                             name=\"receivingLabName\"\n                             value={pcrLabCode.name}\n                             id=\"receivingLabName\"\n                             onChange={handleChange}\n                             className={classes.input}\n                         >\n                           <option>\n                             Select PCR Lab\n                           </option>\n                           {pcr_lab.map((value, i) =>\n                           <option key={i} value={value.name} >{value.name}</option>)}\n                         </Input>\n                         <FormText>Receiving lab is a required field.</FormText>\n                     </FormGroup></Col>\n                        <Col> <FormGroup>\n                          <Label for=\"receivingLabID\" className={classes.label}>Receiving Lab number *</Label>\n                          <Input\n                              type=\"text\"\n                              name=\"receivingLabID\"\n                              value={pcrLabCode.labNo}\n                              id=\"receivingLabID\"\n                              onChange={handleChange}\n                              className={classes.input}\n                              disabled\n                          />\n                      <FormText>Receiving lab Id is a required field.</FormText>\n                      </FormGroup></Col>\n                    </Row>\n                     <Row>\n                        <Col><FormGroup>\n                         <Label for=\"courierRiderName\" className={classes.label}>Courier Name *</Label>\n                         <Input\n                             type=\"text\"\n                             name=\"courierRiderName\"\n                             id=\"courierRiderName\"\n                             value={manifestData.courierRiderName}\n                             onChange={handleChange}\n                             className={classes.input}\n                         />\n                     <FormText>Courier name is a required field.</FormText>\n                     </FormGroup></Col>\n                        <Col> <FormGroup>\n                         <Label for=\"courierContact\" className={classes.label}>Courier Contact *</Label>\n                         <Input\n                             type=\"text\"\n                             name=\"courierContact\"\n                             value={manifestData.courierContact}\n                             id=\"courierContact\"\n                             placeholder=\"(234)7099999999\"\n                             onChange={handleChange}\n                             className={classes.input}\n                         />\n                         <FormText>Courier contact is a required field.</FormText>\n                     </FormGroup></Col>\n                        <Col><FormGroup>\n                      <Label for=\"samplePackagedBy\" className={classes.label}>Sample Packaged By *</Label>\n                      <Input\n                          type=\"tel\"\n                          name=\"samplePackagedBy\"\n                          value={manifestData.samplePackagedBy}\n                          id=\"samplePackagedBy\"\n                          onChange={handleChange}\n                          className={classes.input}\n                      />\n                      <FormText>Sample package by is a required field.</FormText>\n                  </FormGroup></Col>\n                    </Row>\n                     <Row>\n                        <Col> <FormGroup>\n                         <Label for=\"manifest_status\" className={classes.label}>Status</Label>\n                         <Input\n                             type=\"text\"\n                             name=\"manifestStatus\"\n                             id=\"manifestStatus\"\n                             value={status}\n                             onChange={handleChange}\n                             disabled\n                             className={classes.input}\n                         />\n\n                     </FormGroup></Col>\n                        <Col><FormGroup>\n                       <Label for=\"temperatureAtPickup\" className={classes.label}>Temperature at pickup</Label>\n                       <Input\n                           type=\"text\"\n                           name=\"temperatureAtPickup\"\n                           id=\"temperatureAtPickup\"\n                           value={manifestData.temperatureAtPickup}\n                           onChange={handleChange}\n                           className={classes.input}\n                       />\n                   <FormText>Temperature at pickup is a required.</FormText>\n                   </FormGroup></Col>\n                    </Row>\n                     <Row>\n                        <Col><FormGroup>\n                        <Label for=\"total_sample\" className={classes.label}>Total Sample</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"total_sample\"\n                            id=\"total_sample\"\n                            value={localStore.length}\n                            onChange={handleChange}\n                            disabled\n                            className={classes.input}\n                        />\n\n                    </FormGroup></Col>\n                        <Col> <FormGroup>\n                        <Label for=\"test_type\" className={classes.label}>Test type</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"test_type\"\n                            id=\"test_type\"\n                            value=\"VL\"\n                            onChange={handleChange}\n                            disabled\n                            className={classes.input}\n                        />\n\n                    </FormGroup></Col>\n                    </Row>\n                    {\n                        !saved ?\n                         <>\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\"\n                            startIcon={<SaveIcon />} onClick={handleSubmit}>\n                              Save\n                            </Button>\n\n                        </> : \"\"\n                    }\n                </Form>\n                 }\n             </CardBody>\n        </Card>\n        { open ?\n        <ConfigModal modalstatus={open} togglestatus={toggleModal} manifestsId={manifestsId} saved={saved} /> : \" \"}\n      </>\n  );\n}\n\nexport default CreateAManifest;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ManifestList.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, {useEffect, useCallback, useState} from 'react';\nimport Container from '@mui/material/Container';\nimport MaterialTable from 'material-table';\nimport { Link } from 'react-router-dom'\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { MdDashboard, MdDeleteForever, MdModeEdit, MdPerson } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport { alpha } from '@material-ui/core/styles'\nimport SplitActionButton from './SplitActionButton';\n\nimport {  Modal, ModalHeader, ModalBody,\n    Col,Input,\n    FormGroup,\n    Label,Card, CardBody, Table\n} from 'reactstrap';\n\nimport \"./sample.css\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nimport { forwardRef } from 'react';\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport {token, url } from \"../../../api\";\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport \"@reach/menu-button/styles.css\";\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}));\n\nconst DownloadManifest = (props) => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState('')\n    const [collectedSamples, setCollectedSamples] = useState([])\n    const [permissions, setPermissions] = useState([]);\n\n     useEffect(() => {\n            userPermission();\n          }, []);\n\n        const userPermission =()=>{\n            axios\n                .get(`${url}account`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(\"permission\", response.data.permissions)\n                    setPermissions(response.data.permissions);\n\n                })\n                .catch((error) => {\n                });\n        }\n\n         const loadManifestData = useCallback(async () => {\n            try {\n                const response = await axios.get(`${url}lims/manifests`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                console.log(\"manifest\", response);\n                setCollectedSamples(response.data);\n                setLoading(false)\n\n            } catch (e) {\n                toast.error(\"An error occurred while fetching lab\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n                setLoading(false)\n            }\n        }, []);\n\n         useEffect(() => {\n         setLoading('true');\n\n             loadManifestData();\n\n         }, [loadManifestData]);\n\n     const actionItems = row => {\n          return  [\n          {...(permissions.includes('view_manifest') || permissions.includes(\"all_permission\") &&\n              {\n                  name:'View',\n                  type:'link',\n                  icon:<FaEye  size=\"22\"/>,\n                  to:{\n                      pathname: \"/print-manifest\",\n                      state: { sampleObj: row, permissions:permissions  }\n                  }\n              }\n          )},\n//              {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\n//                      {\n//                          name:'Print Manifest',\n//                          type:'link',\n//                          icon:<MdPerson size=\"20\" color='rgb(4, 196, 217)' />,\n//                          to:{\n//                              pathname: \"/print-manifest\",\n//                              state: { sampleObj: row, permissions:permissions  }\n//                          }\n//                      }\n//              )},\n\n              {...(permissions.includes('view_result') || permissions.includes(\"all_permission\") &&\n                      {\n                          name:' Results',\n                          type:'link',\n                          icon:<FaEye size=\"20\" color='rgb(4, 196, 217)' />,\n                          to:{\n                              pathname: \"/result\",\n                              state: { manifestObj: row, permissions:permissions }\n                          }\n                      }\n                  )},\n              {...(permissions.includes('add_result') || permissions.includes(\"all_permission\") &&\n                      {\n                          name:'Add Result',\n                          type:'link',\n                          icon:<MdModeEdit size=\"20\" color='rgb(4, 196, 217)'  />,\n                          to:{\n                              pathname: \"/add-result\",\n                              state: { manifestObj: row, permissions:permissions }\n                          }\n                      }\n                  )}\n           ]\n       }\n\n  return (\n    <>\n       <div>\n           {/*<Stack direction=\"row\" spacing={2}\n           m={1}\n           display=\"flex\"\n           justifyContent=\"flex-end\"\n           alignItems=\"flex-end\">\n                <Link color=\"inherit\"\n                    to={{pathname: \"/create-manifest\"}}\n                     >\n                    <Button variant=\"outlined\" color=\"primary\">\n                       Create Manifest\n                    </Button>\n                </Link>\n\n            </Stack>\n           <br />*/}\n       </div>\n       <div>\n              <MaterialTable\n               icons={tableIcons}\n                  title=\"Previous Manifests\"\n                  columns={[\n                      { title: \"Manifest Id\", field: \"manifestId\" },\n                      { title: \"Pickup Date\", field: \"pickupDate\" },\n                      { title: \"Created Date\", field: \"createDate\" },\n                      { title: \"Receiving Lab\", field: \"lab\" },\n                       { title: \"Packaged By\", field: \"packaged_by\" },\n                       { title: \"Total Samples\", field: \"samples\" },\n                      {\n                        title: \"Status\",\n                        field: \"status\",\n                      },\n                      {\n                        title: \"Action\",\n                        field: \"actions\",\n                        filtering: false,\n                      },\n                  ]}\n                  isLoading={loading}\n                  data={ collectedSamples.map((row) => (\n                        {\n                          manifestId: row.manifestID,\n                          pickupDate: row.dateScheduledForPickup.replace('T', ' '),\n                          createDate: row.createDate.replace('T', ' '),\n                          lab: row.receivingLabName,\n                          packaged_by: row.samplePackagedBy,\n                          samples: row.sampleInformation.length,\n                          status: row.manifestStatus,\n\n                          actions:\n                            <div>\n                               <SplitActionButton actions={actionItems(row)} />\n                            </div>\n\n                        }))}\n\n                      options={{\n                        headerStyle: {\n                            backgroundColor: \"#014d88\",\n                            color: \"#fff\",\n                            fontSize:'16px',\n                            padding:'10px'\n                        },\n                        searchFieldStyle: {\n                            width : '200%',\n                            margingLeft: '250px',\n                        },\n                        selection: false,\n                        filtering: false,\n                        exportButton: false,\n                        searchFieldAlignment: 'left',\n                        pageSizeOptions:[10,20,100],\n                        pageSize:10,\n                        debounceInterval: 400\n                    }}\n\n              />\n       </div>\n    </>\n  );\n}\n\nexport default DownloadManifest;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/sampleObj.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/api.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/PrintResults.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/SplitActionButton.js",["300","301","302","303","304","305","306","307"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ContentCut from '@mui/icons-material/ContentCut';\nimport Typography from '@mui/material/Typography';\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\nimport Divider from '@mui/material/Divider';\nimport {useRef} from \"react\";\nimport { Link } from 'react-router-dom'\n\n\n\nconst options = ['Delete', 'Edit'];\n\n\n\nexport default function SplitActionButton(props) {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = useRef(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n    const handleClick = () => {\n        console.info(`You clicked ${options[selectedIndex]}`);\n    };\n\n    const handleMenuItemClick = () => {\n        setOpen(false);\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\n                    </Button>\n                </Link>\n\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\n                    1\n                </Divider>\n                <Button\n                    size=\"medium\"\n                    aria-controls={open ? 'split-button-menu' : undefined}\n                    aria-expanded={open ? 'true' : undefined}\n                    aria-label=\"select merge strategy\"\n                    aria-haspopup=\"menu\"\n                    onClick={handleToggle}\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\n                >\n                    <FaCaretDown size='24' />\n                </Button>\n            </ButtonGroup>\n            <Popper\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                style={{ zIndex:'10000' }}\n            >\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                            zIndex:'1000'\n                        }}\n                    >\n                        {/*width: 130,*/}\n                        <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\n                                    {props.actions.slice(1).map((option, index) => (\n                                        <MenuItem\n                                            key={Math.random()}\n                                        >\n                                            <Link\n                                                to={option.to}\n                                            >\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\n                                            </Link>\n\n                                        </MenuItem>\n                                    ))}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n}","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/pcr.js",[],"/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/ConfigModal.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {Modal,ModalHeader, ModalBody,Form,FormFeedback,Row,Alert,Col,Input,FormGroup,Label,Card,CardBody,} from \"reactstrap\";\nimport axios from \"axios\";\n\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SendIcon from '@mui/icons-material/Send';\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { connect } from \"react-redux\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/styles.css\";\nimport { DateTimePicker } from \"react-widgets\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport {token, url } from \"../../../api\";\nimport { Spinner } from \"reactstrap\";\nimport { toast} from \"react-toastify\";\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        border:'2px solid #014d88',\n        borderRadius:'0px',\n        fontSize:'16px',\n        color:'#000'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    inputGroupText:{\n        backgroundColor:'#014d88',\n        fontWeight:\"bolder\",\n        color:'#fff',\n        borderRadius:'0px'\n    },\n    label:{\n        fontSize:'16px',\n        color:'rgb(153, 46, 98)',\n        fontWeight:'600'\n    }\n}))\n\nconst ConfigModal = (props) => {\n    const {manifestsId} = props;\n    const history = useHistory();\n\n    const classes = useStyles()\n    const [saved, setSaved] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const [visible, setVisible] = useState(true);\n    const onDismiss = () => setVisible(false);\n    const [config, setConfig] = useState({\n        config: \"\"\n    });\n\n    const [saveButtonStatus, setSaveButtonStatus] = useState(false);\n\n    const [errors, setErrors] = useState({});\n\n    const [logins, setLogins] = useState([])\n\n    const [configId, setConfigId] = useState(0);\n\n    const loadResults = useCallback(async () => {\n        try {\n            const response = await axios.get(`${url}lims/configs`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            //console.log(\"configs\", response);\n            setLogins(response.data)\n            setLoading(false)\n        } catch (e) {\n            toast.error(\"An error occurred while fetching config details\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n            setLoading(false)\n        }\n    }, []);\n\n    useEffect(() => {\n        loadResults()\n    }, [loadResults]);\n\n    const handleChange = (event) => {\n       const { name, value } = event.target\n       setConfigId(parseInt(value));\n       //setConfig({ ...config, [name]: value})\n       //console.log(\"config\",config)\n     }\n\n    const saveSample = async (e) => {\n        e.preventDefault();\n         console.log(configId)\n         setSaved(true);\n    };\n\n    const sendManifest = async (e) => {\n        e.preventDefault()\n        console.log(\"sending manifest\")\n        props.togglestatus();\n         await axios.get(`${url}lims/ready-manifests/${manifestsId}/${configId}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\n            .then((resp) => {\n                console.log(\"sending manifest\", resp)\n                //setSend(true)\n                toast.success(\"Sample manifest sent successfully to PCR Lab.\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n\n//                if (resp.data.errors.length > 0) {\n//                    toast.error(resp.data.errors[0].reasons, {\n//                        position: toast.POSITION.TOP_RIGHT\n//                     });\n//                     setSend(true)\n//                }\n//                else {\n//                     toast.success(\"Sample manifest sent successfully to PCR Lab.\", {\n//                        position: toast.POSITION.TOP_RIGHT\n//                    });\n//                    setSend(true)\n//                    setStatus(\"Manifest Sent\");\n//                }\n            })\n    }\n\n    return (\n        <div >\n            <Card >\n                <CardBody>\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\n                        <Form onSubmit={saveSample}>\n                            <ModalHeader toggle={props.togglestatus}>Select PCR Server </ModalHeader>\n                            <ModalBody>\n                                 <Row>\n                                    <Col>\n                                        <FormGroup>\n                                           <Label for=\"configName\" className={classes.label}>Configuration Setting</Label>\n                                           <Input\n                                               type=\"select\"\n                                               name=\"config\"\n                                               id=\"config\"\n                                               className={classes.input}\n                                               onChange={handleChange}\n                                           >\n                                            <option hidden>\n                                                Which server are you sending to?\n                                            </option>\n                                            { logins && logins.map((data, i) => (\n                                                <option key={i} value={data.id}>\n                                                    {data.configName}\n                                                </option>\n                                            ))}\n                                           </Input>\n                                       </FormGroup>\n                                    </Col>\n                                    <Col></Col>\n                                </Row>\n\n                                <MatButton\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    startIcon={<SaveIcon />}\n                                    disabled={loading}\n                                >\n                                    Save\n                                </MatButton>\n\n                                {\" \"}\n                                <MatButton variant=\"contained\" color=\"secondary\" startIcon={<SendIcon />}\n                                type=\"submit\" onClick={sendManifest} disabled={saved ? false : true}>\n                                  Send\n                                </MatButton>\n\n                            </ModalBody>\n                        </Form>\n                    </Modal>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default ConfigModal;","/Users/mac/Desktop/Projects/lims-module/src/main/webapp/jsx/components/SampleCollection/AddResultModal.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],{"ruleId":"354","severity":1,"message":"355","line":4,"column":41,"nodeType":"356","messageId":"357","endLine":4,"endColumn":47},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"354","severity":1,"message":"362","line":16,"column":8,"nodeType":"356","messageId":"357","endLine":16,"endColumn":20},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"365","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":17},{"ruleId":"354","severity":1,"message":"366","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":13},{"ruleId":"354","severity":1,"message":"367","line":5,"column":15,"nodeType":"356","messageId":"357","endLine":5,"endColumn":18},{"ruleId":"354","severity":1,"message":"368","line":9,"column":8,"nodeType":"356","messageId":"357","endLine":9,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":18},{"ruleId":"354","severity":1,"message":"371","line":13,"column":10,"nodeType":"356","messageId":"357","endLine":13,"endColumn":20},{"ruleId":"354","severity":1,"message":"372","line":18,"column":8,"nodeType":"356","messageId":"357","endLine":18,"endColumn":14},{"ruleId":"354","severity":1,"message":"373","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":13},{"ruleId":"354","severity":1,"message":"374","line":91,"column":12,"nodeType":"356","messageId":"357","endLine":91,"endColumn":19},{"ruleId":"354","severity":1,"message":"375","line":91,"column":21,"nodeType":"356","messageId":"357","endLine":91,"endColumn":31},{"ruleId":"354","severity":1,"message":"376","line":92,"column":12,"nodeType":"356","messageId":"357","endLine":92,"endColumn":28},{"ruleId":"354","severity":1,"message":"377","line":92,"column":30,"nodeType":"356","messageId":"357","endLine":92,"endColumn":49},{"ruleId":"354","severity":1,"message":"378","line":93,"column":11,"nodeType":"356","messageId":"357","endLine":93,"endColumn":23},{"ruleId":"354","severity":1,"message":"379","line":94,"column":12,"nodeType":"356","messageId":"357","endLine":94,"endColumn":17},{"ruleId":"354","severity":1,"message":"380","line":94,"column":19,"nodeType":"356","messageId":"357","endLine":94,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":111,"column":8,"nodeType":"383","endLine":111,"endColumn":10,"suggestions":"384"},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"385","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":11},{"ruleId":"354","severity":1,"message":"386","line":7,"column":8,"nodeType":"356","messageId":"357","endLine":7,"endColumn":18},{"ruleId":"387","severity":1,"message":"388","line":88,"column":49,"nodeType":"389","messageId":"390","endLine":88,"endColumn":51},{"ruleId":"354","severity":1,"message":"391","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":20},{"ruleId":"354","severity":1,"message":"392","line":6,"column":9,"nodeType":"356","messageId":"357","endLine":6,"endColumn":15},{"ruleId":"393","severity":1,"message":"394","line":67,"column":69,"nodeType":"395","messageId":"396","endLine":67,"endColumn":71},{"ruleId":"393","severity":1,"message":"394","line":67,"column":111,"nodeType":"395","messageId":"396","endLine":67,"endColumn":113},{"ruleId":"393","severity":1,"message":"394","line":73,"column":71,"nodeType":"395","messageId":"396","endLine":73,"endColumn":73},{"ruleId":"393","severity":1,"message":"394","line":73,"column":113,"nodeType":"395","messageId":"396","endLine":73,"endColumn":115},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"397","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"365","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":17},{"ruleId":"354","severity":1,"message":"366","line":5,"column":10,"nodeType":"356","messageId":"357","endLine":5,"endColumn":13},{"ruleId":"354","severity":1,"message":"367","line":5,"column":15,"nodeType":"356","messageId":"357","endLine":5,"endColumn":18},{"ruleId":"354","severity":1,"message":"398","line":6,"column":9,"nodeType":"356","messageId":"357","endLine":6,"endColumn":14},{"ruleId":"354","severity":1,"message":"399","line":6,"column":16,"nodeType":"356","messageId":"357","endLine":6,"endColumn":21},{"ruleId":"354","severity":1,"message":"400","line":6,"column":23,"nodeType":"356","messageId":"357","endLine":6,"endColumn":32},{"ruleId":"354","severity":1,"message":"368","line":9,"column":8,"nodeType":"356","messageId":"357","endLine":9,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":18},{"ruleId":"354","severity":1,"message":"372","line":25,"column":8,"nodeType":"356","messageId":"357","endLine":25,"endColumn":14},{"ruleId":"354","severity":1,"message":"373","line":26,"column":8,"nodeType":"356","messageId":"357","endLine":26,"endColumn":13},{"ruleId":"354","severity":1,"message":"401","line":123,"column":11,"nodeType":"356","messageId":"357","endLine":123,"endColumn":18},{"ruleId":"354","severity":1,"message":"402","line":137,"column":11,"nodeType":"356","messageId":"357","endLine":137,"endColumn":23},{"ruleId":"354","severity":1,"message":"403","line":160,"column":16,"nodeType":"356","messageId":"357","endLine":160,"endColumn":25},{"ruleId":"354","severity":1,"message":"404","line":163,"column":16,"nodeType":"356","messageId":"357","endLine":163,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":196,"column":23,"nodeType":"407","messageId":"390","endLine":196,"endColumn":26},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"366","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":13},{"ruleId":"354","severity":1,"message":"367","line":4,"column":15,"nodeType":"356","messageId":"357","endLine":4,"endColumn":18},{"ruleId":"354","severity":1,"message":"408","line":4,"column":26,"nodeType":"356","messageId":"357","endLine":4,"endColumn":31},{"ruleId":"354","severity":1,"message":"409","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":21},{"ruleId":"354","severity":1,"message":"410","line":8,"column":17,"nodeType":"356","messageId":"357","endLine":8,"endColumn":24},{"ruleId":"354","severity":1,"message":"368","line":13,"column":8,"nodeType":"356","messageId":"357","endLine":13,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":14,"column":8,"nodeType":"356","messageId":"357","endLine":14,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":15,"column":8,"nodeType":"356","messageId":"357","endLine":15,"endColumn":18},{"ruleId":"354","severity":1,"message":"411","line":19,"column":10,"nodeType":"356","messageId":"357","endLine":19,"endColumn":15},{"ruleId":"354","severity":1,"message":"372","line":22,"column":8,"nodeType":"356","messageId":"357","endLine":22,"endColumn":14},{"ruleId":"354","severity":1,"message":"373","line":23,"column":8,"nodeType":"356","messageId":"357","endLine":23,"endColumn":13},{"ruleId":"354","severity":1,"message":"412","line":104,"column":7,"nodeType":"356","messageId":"357","endLine":104,"endColumn":17},{"ruleId":"354","severity":1,"message":"413","line":128,"column":11,"nodeType":"356","messageId":"357","endLine":128,"endColumn":22},{"ruleId":"354","severity":1,"message":"374","line":131,"column":12,"nodeType":"356","messageId":"357","endLine":131,"endColumn":19},{"ruleId":"381","severity":1,"message":"414","line":155,"column":8,"nodeType":"383","endLine":155,"endColumn":10,"suggestions":"415"},{"ruleId":"354","severity":1,"message":"416","line":163,"column":11,"nodeType":"356","messageId":"357","endLine":163,"endColumn":25},{"ruleId":"354","severity":1,"message":"417","line":1,"column":16,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"418","line":1,"column":50,"nodeType":"356","messageId":"357","endLine":1,"endColumn":56},{"ruleId":"354","severity":1,"message":"371","line":1,"column":58,"nodeType":"356","messageId":"357","endLine":1,"endColumn":68},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"408","line":4,"column":26,"nodeType":"356","messageId":"357","endLine":4,"endColumn":31},{"ruleId":"354","severity":1,"message":"409","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":21},{"ruleId":"354","severity":1,"message":"419","line":12,"column":10,"nodeType":"356","messageId":"357","endLine":12,"endColumn":18},{"ruleId":"354","severity":1,"message":"420","line":13,"column":11,"nodeType":"356","messageId":"357","endLine":13,"endColumn":23},{"ruleId":"354","severity":1,"message":"421","line":13,"column":36,"nodeType":"356","messageId":"357","endLine":13,"endColumn":44},{"ruleId":"354","severity":1,"message":"422","line":15,"column":12,"nodeType":"356","messageId":"357","endLine":15,"endColumn":17},{"ruleId":"354","severity":1,"message":"368","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":20,"column":8,"nodeType":"356","messageId":"357","endLine":20,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":18},{"ruleId":"354","severity":1,"message":"373","line":30,"column":8,"nodeType":"356","messageId":"357","endLine":30,"endColumn":13},{"ruleId":"423","severity":1,"message":"424","line":96,"column":43,"nodeType":"425","messageId":"426","endLine":96,"endColumn":45},{"ruleId":"354","severity":1,"message":"374","line":103,"column":12,"nodeType":"356","messageId":"357","endLine":103,"endColumn":19},{"ruleId":"354","severity":1,"message":"375","line":103,"column":21,"nodeType":"356","messageId":"357","endLine":103,"endColumn":31},{"ruleId":"354","severity":1,"message":"427","line":104,"column":12,"nodeType":"356","messageId":"357","endLine":104,"endColumn":19},{"ruleId":"354","severity":1,"message":"428","line":104,"column":21,"nodeType":"356","messageId":"357","endLine":104,"endColumn":31},{"ruleId":"354","severity":1,"message":"417","line":1,"column":16,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"429","line":1,"column":40,"nodeType":"356","messageId":"357","endLine":1,"endColumn":48},{"ruleId":"354","severity":1,"message":"397","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"430","line":2,"column":16,"nodeType":"356","messageId":"357","endLine":2,"endColumn":26},{"ruleId":"354","severity":1,"message":"431","line":5,"column":11,"nodeType":"356","messageId":"357","endLine":5,"endColumn":16},{"ruleId":"354","severity":1,"message":"432","line":5,"column":18,"nodeType":"356","messageId":"357","endLine":5,"endColumn":29},{"ruleId":"354","severity":1,"message":"433","line":5,"column":31,"nodeType":"356","messageId":"357","endLine":5,"endColumn":40},{"ruleId":"354","severity":1,"message":"367","line":6,"column":10,"nodeType":"356","messageId":"357","endLine":6,"endColumn":13},{"ruleId":"354","severity":1,"message":"399","line":6,"column":14,"nodeType":"356","messageId":"357","endLine":6,"endColumn":19},{"ruleId":"354","severity":1,"message":"400","line":7,"column":5,"nodeType":"356","messageId":"357","endLine":7,"endColumn":14},{"ruleId":"354","severity":1,"message":"398","line":8,"column":5,"nodeType":"356","messageId":"357","endLine":8,"endColumn":10},{"ruleId":"434","severity":1,"message":"435","line":29,"column":37,"nodeType":"436","endLine":29,"endColumn":94},{"ruleId":"437","severity":1,"message":"438","line":91,"column":41,"nodeType":"439","endLine":91,"endColumn":52},{"ruleId":"354","severity":1,"message":"418","line":1,"column":50,"nodeType":"356","messageId":"357","endLine":1,"endColumn":56},{"ruleId":"354","severity":1,"message":"371","line":1,"column":58,"nodeType":"356","messageId":"357","endLine":1,"endColumn":68},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"397","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":14},{"ruleId":"354","severity":1,"message":"409","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":21},{"ruleId":"354","severity":1,"message":"440","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":17},{"ruleId":"354","severity":1,"message":"441","line":8,"column":8,"nodeType":"356","messageId":"357","endLine":8,"endColumn":16},{"ruleId":"354","severity":1,"message":"442","line":12,"column":8,"nodeType":"356","messageId":"357","endLine":12,"endColumn":22},{"ruleId":"354","severity":1,"message":"419","line":14,"column":10,"nodeType":"356","messageId":"357","endLine":14,"endColumn":18},{"ruleId":"354","severity":1,"message":"420","line":15,"column":11,"nodeType":"356","messageId":"357","endLine":15,"endColumn":23},{"ruleId":"354","severity":1,"message":"421","line":15,"column":36,"nodeType":"356","messageId":"357","endLine":15,"endColumn":44},{"ruleId":"354","severity":1,"message":"422","line":17,"column":12,"nodeType":"356","messageId":"357","endLine":17,"endColumn":17},{"ruleId":"354","severity":1,"message":"410","line":17,"column":19,"nodeType":"356","messageId":"357","endLine":17,"endColumn":26},{"ruleId":"354","severity":1,"message":"368","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":22,"column":8,"nodeType":"356","messageId":"357","endLine":22,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":23,"column":8,"nodeType":"356","messageId":"357","endLine":23,"endColumn":18},{"ruleId":"354","severity":1,"message":"443","line":24,"column":8,"nodeType":"356","messageId":"357","endLine":24,"endColumn":18},{"ruleId":"354","severity":1,"message":"373","line":31,"column":8,"nodeType":"356","messageId":"357","endLine":31,"endColumn":13},{"ruleId":"354","severity":1,"message":"444","line":94,"column":11,"nodeType":"356","messageId":"357","endLine":94,"endColumn":22},{"ruleId":"354","severity":1,"message":"413","line":96,"column":11,"nodeType":"356","messageId":"357","endLine":96,"endColumn":22},{"ruleId":"354","severity":1,"message":"374","line":99,"column":12,"nodeType":"356","messageId":"357","endLine":99,"endColumn":19},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"397","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"365","line":3,"column":10,"nodeType":"356","messageId":"357","endLine":3,"endColumn":17},{"ruleId":"354","severity":1,"message":"445","line":6,"column":8,"nodeType":"356","messageId":"357","endLine":6,"endColumn":18},{"ruleId":"354","severity":1,"message":"370","line":8,"column":8,"nodeType":"356","messageId":"357","endLine":8,"endColumn":18},{"ruleId":"354","severity":1,"message":"431","line":10,"column":11,"nodeType":"356","messageId":"357","endLine":10,"endColumn":16},{"ruleId":"354","severity":1,"message":"432","line":10,"column":18,"nodeType":"356","messageId":"357","endLine":10,"endColumn":29},{"ruleId":"354","severity":1,"message":"433","line":10,"column":31,"nodeType":"356","messageId":"357","endLine":10,"endColumn":40},{"ruleId":"354","severity":1,"message":"408","line":11,"column":26,"nodeType":"356","messageId":"357","endLine":11,"endColumn":31},{"ruleId":"354","severity":1,"message":"420","line":12,"column":11,"nodeType":"356","messageId":"357","endLine":12,"endColumn":23},{"ruleId":"354","severity":1,"message":"422","line":14,"column":12,"nodeType":"356","messageId":"357","endLine":14,"endColumn":17},{"ruleId":"354","severity":1,"message":"373","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":13},{"ruleId":"354","severity":1,"message":"446","line":24,"column":8,"nodeType":"356","messageId":"357","endLine":24,"endColumn":16},{"ruleId":"354","severity":1,"message":"374","line":86,"column":12,"nodeType":"356","messageId":"357","endLine":86,"endColumn":19},{"ruleId":"354","severity":1,"message":"375","line":86,"column":21,"nodeType":"356","messageId":"357","endLine":86,"endColumn":31},{"ruleId":"354","severity":1,"message":"376","line":87,"column":12,"nodeType":"356","messageId":"357","endLine":87,"endColumn":28},{"ruleId":"354","severity":1,"message":"377","line":87,"column":30,"nodeType":"356","messageId":"357","endLine":87,"endColumn":49},{"ruleId":"354","severity":1,"message":"447","line":88,"column":11,"nodeType":"356","messageId":"357","endLine":88,"endColumn":18},{"ruleId":"354","severity":1,"message":"448","line":90,"column":12,"nodeType":"356","messageId":"357","endLine":90,"endColumn":16},{"ruleId":"354","severity":1,"message":"449","line":90,"column":18,"nodeType":"356","messageId":"357","endLine":90,"endColumn":25},{"ruleId":"354","severity":1,"message":"450","line":93,"column":20,"nodeType":"356","messageId":"357","endLine":93,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":147,"column":29,"nodeType":"425","messageId":"426","endLine":147,"endColumn":31},{"ruleId":"354","severity":1,"message":"364","line":2,"column":8,"nodeType":"356","messageId":"357","endLine":2,"endColumn":17},{"ruleId":"354","severity":1,"message":"397","line":4,"column":10,"nodeType":"356","messageId":"357","endLine":4,"endColumn":14},{"ruleId":"354","severity":1,"message":"440","line":5,"column":8,"nodeType":"356","messageId":"357","endLine":5,"endColumn":17},{"ruleId":"354","severity":1,"message":"451","line":7,"column":10,"nodeType":"356","messageId":"357","endLine":7,"endColumn":21},{"ruleId":"354","severity":1,"message":"452","line":7,"column":23,"nodeType":"356","messageId":"357","endLine":7,"endColumn":38},{"ruleId":"354","severity":1,"message":"453","line":7,"column":52,"nodeType":"356","messageId":"357","endLine":7,"endColumn":60},{"ruleId":"354","severity":1,"message":"454","line":8,"column":9,"nodeType":"356","messageId":"357","endLine":8,"endColumn":13},{"ruleId":"354","severity":1,"message":"455","line":8,"column":14,"nodeType":"356","messageId":"357","endLine":8,"endColumn":22},{"ruleId":"354","severity":1,"message":"456","line":8,"column":23,"nodeType":"356","messageId":"357","endLine":8,"endColumn":33},{"ruleId":"354","severity":1,"message":"457","line":8,"column":34,"nodeType":"356","messageId":"357","endLine":8,"endColumn":42},{"ruleId":"354","severity":1,"message":"458","line":9,"column":10,"nodeType":"356","messageId":"357","endLine":9,"endColumn":15},{"ruleId":"354","severity":1,"message":"431","line":12,"column":11,"nodeType":"356","messageId":"357","endLine":12,"endColumn":16},{"ruleId":"354","severity":1,"message":"432","line":12,"column":18,"nodeType":"356","messageId":"357","endLine":12,"endColumn":29},{"ruleId":"354","severity":1,"message":"433","line":12,"column":31,"nodeType":"356","messageId":"357","endLine":12,"endColumn":40},{"ruleId":"354","severity":1,"message":"367","line":13,"column":5,"nodeType":"356","messageId":"357","endLine":13,"endColumn":8},{"ruleId":"354","severity":1,"message":"399","line":13,"column":9,"nodeType":"356","messageId":"357","endLine":13,"endColumn":14},{"ruleId":"354","severity":1,"message":"400","line":14,"column":5,"nodeType":"356","messageId":"357","endLine":14,"endColumn":14},{"ruleId":"354","severity":1,"message":"398","line":15,"column":5,"nodeType":"356","messageId":"357","endLine":15,"endColumn":10},{"ruleId":"354","severity":1,"message":"459","line":15,"column":11,"nodeType":"356","messageId":"357","endLine":15,"endColumn":15},{"ruleId":"354","severity":1,"message":"419","line":15,"column":17,"nodeType":"356","messageId":"357","endLine":15,"endColumn":25},{"ruleId":"354","severity":1,"message":"408","line":15,"column":27,"nodeType":"356","messageId":"357","endLine":15,"endColumn":32},{"ruleId":"354","severity":1,"message":"368","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":22},{"ruleId":"354","severity":1,"message":"369","line":20,"column":8,"nodeType":"356","messageId":"357","endLine":20,"endColumn":15},{"ruleId":"354","severity":1,"message":"370","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":18},{"ruleId":"354","severity":1,"message":"460","line":22,"column":8,"nodeType":"356","messageId":"357","endLine":22,"endColumn":16},{"ruleId":"354","severity":1,"message":"461","line":23,"column":8,"nodeType":"356","messageId":"357","endLine":23,"endColumn":18},{"ruleId":"354","severity":1,"message":"462","line":24,"column":8,"nodeType":"356","messageId":"357","endLine":24,"endColumn":24},{"ruleId":"354","severity":1,"message":"372","line":31,"column":8,"nodeType":"356","messageId":"357","endLine":31,"endColumn":14},{"ruleId":"354","severity":1,"message":"373","line":32,"column":8,"nodeType":"356","messageId":"357","endLine":32,"endColumn":13},{"ruleId":"354","severity":1,"message":"463","line":34,"column":16,"nodeType":"356","messageId":"357","endLine":34,"endColumn":26},{"ruleId":"354","severity":1,"message":"401","line":117,"column":11,"nodeType":"356","messageId":"357","endLine":117,"endColumn":18},{"ruleId":"393","severity":1,"message":"394","line":164,"column":54,"nodeType":"395","messageId":"396","endLine":164,"endColumn":56},{"ruleId":"393","severity":1,"message":"394","line":164,"column":96,"nodeType":"395","messageId":"396","endLine":164,"endColumn":98},{"ruleId":"393","severity":1,"message":"394","line":187,"column":56,"nodeType":"395","messageId":"396","endLine":187,"endColumn":58},{"ruleId":"393","severity":1,"message":"394","line":187,"column":98,"nodeType":"395","messageId":"396","endLine":187,"endColumn":100},{"ruleId":"393","severity":1,"message":"394","line":198,"column":55,"nodeType":"395","messageId":"396","endLine":198,"endColumn":57},{"ruleId":"393","severity":1,"message":"394","line":198,"column":97,"nodeType":"395","messageId":"396","endLine":198,"endColumn":99},{"ruleId":"354","severity":1,"message":"417","line":1,"column":16,"nodeType":"356","messageId":"357","endLine":1,"endColumn":25},{"ruleId":"354","severity":1,"message":"363","line":1,"column":27,"nodeType":"356","messageId":"357","endLine":1,"endColumn":38},{"ruleId":"354","severity":1,"message":"429","line":1,"column":40,"nodeType":"356","messageId":"357","endLine":1,"endColumn":48},{"ruleId":"354","severity":1,"message":"397","line":2,"column":10,"nodeType":"356","messageId":"357","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"430","line":2,"column":16,"nodeType":"356","messageId":"357","endLine":2,"endColumn":26},{"ruleId":"354","severity":1,"message":"367","line":4,"column":15,"nodeType":"356","messageId":"357","endLine":4,"endColumn":18},{"ruleId":"354","severity":1,"message":"431","line":6,"column":11,"nodeType":"356","messageId":"357","endLine":6,"endColumn":16},{"ruleId":"354","severity":1,"message":"432","line":6,"column":18,"nodeType":"356","messageId":"357","endLine":6,"endColumn":29},{"ruleId":"354","severity":1,"message":"433","line":6,"column":31,"nodeType":"356","messageId":"357","endLine":6,"endColumn":40},{"ruleId":"354","severity":1,"message":"399","line":7,"column":5,"nodeType":"356","messageId":"357","endLine":7,"endColumn":10},{"ruleId":"354","severity":1,"message":"400","line":8,"column":5,"nodeType":"356","messageId":"357","endLine":8,"endColumn":14},{"ruleId":"354","severity":1,"message":"398","line":9,"column":5,"nodeType":"356","messageId":"357","endLine":9,"endColumn":10},{"ruleId":"437","severity":1,"message":"438","line":82,"column":47,"nodeType":"439","endLine":82,"endColumn":58},{"ruleId":"437","severity":1,"message":"438","line":96,"column":43,"nodeType":"439","endLine":96,"endColumn":54},{"ruleId":"354","severity":1,"message":"464","line":4,"column":8,"nodeType":"356","messageId":"357","endLine":4,"endColumn":25},{"ruleId":"354","severity":1,"message":"368","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":22},{"ruleId":"354","severity":1,"message":"465","line":12,"column":8,"nodeType":"356","messageId":"357","endLine":12,"endColumn":20},{"ruleId":"354","severity":1,"message":"466","line":13,"column":8,"nodeType":"356","messageId":"357","endLine":13,"endColumn":20},{"ruleId":"354","severity":1,"message":"467","line":14,"column":8,"nodeType":"356","messageId":"357","endLine":14,"endColumn":18},{"ruleId":"354","severity":1,"message":"468","line":16,"column":9,"nodeType":"356","messageId":"357","endLine":16,"endColumn":14},{"ruleId":"354","severity":1,"message":"469","line":30,"column":27,"nodeType":"356","messageId":"357","endLine":30,"endColumn":43},{"ruleId":"354","severity":1,"message":"470","line":36,"column":11,"nodeType":"356","messageId":"357","endLine":36,"endColumn":30},{"ruleId":"354","severity":1,"message":"420","line":2,"column":43,"nodeType":"356","messageId":"357","endLine":2,"endColumn":55},{"ruleId":"354","severity":1,"message":"471","line":2,"column":60,"nodeType":"356","messageId":"357","endLine":2,"endColumn":65},{"ruleId":"354","severity":1,"message":"461","line":9,"column":8,"nodeType":"356","messageId":"357","endLine":9,"endColumn":18},{"ruleId":"354","severity":1,"message":"365","line":10,"column":10,"nodeType":"356","messageId":"357","endLine":10,"endColumn":17},{"ruleId":"354","severity":1,"message":"472","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":12},{"ruleId":"354","severity":1,"message":"473","line":12,"column":8,"nodeType":"356","messageId":"357","endLine":12,"endColumn":17},{"ruleId":"354","severity":1,"message":"474","line":13,"column":8,"nodeType":"356","messageId":"357","endLine":13,"endColumn":20},{"ruleId":"354","severity":1,"message":"475","line":16,"column":10,"nodeType":"356","messageId":"357","endLine":16,"endColumn":24},{"ruleId":"354","severity":1,"message":"476","line":17,"column":8,"nodeType":"356","messageId":"357","endLine":17,"endColumn":14},{"ruleId":"354","severity":1,"message":"477","line":18,"column":8,"nodeType":"356","messageId":"357","endLine":18,"endColumn":23},{"ruleId":"354","severity":1,"message":"478","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":14},{"ruleId":"354","severity":1,"message":"410","line":21,"column":10,"nodeType":"356","messageId":"357","endLine":21,"endColumn":17},{"ruleId":"354","severity":1,"message":"479","line":84,"column":11,"nodeType":"356","messageId":"357","endLine":84,"endColumn":18},{"ruleId":"354","severity":1,"message":"480","line":89,"column":12,"nodeType":"356","messageId":"357","endLine":89,"endColumn":19},{"ruleId":"354","severity":1,"message":"481","line":90,"column":11,"nodeType":"356","messageId":"357","endLine":90,"endColumn":20},{"ruleId":"354","severity":1,"message":"482","line":91,"column":12,"nodeType":"356","messageId":"357","endLine":91,"endColumn":18},{"ruleId":"354","severity":1,"message":"483","line":91,"column":20,"nodeType":"356","messageId":"357","endLine":91,"endColumn":29},{"ruleId":"354","severity":1,"message":"484","line":95,"column":12,"nodeType":"356","messageId":"357","endLine":95,"endColumn":28},{"ruleId":"354","severity":1,"message":"485","line":95,"column":30,"nodeType":"356","messageId":"357","endLine":95,"endColumn":49},{"ruleId":"354","severity":1,"message":"486","line":97,"column":12,"nodeType":"356","messageId":"357","endLine":97,"endColumn":18},{"ruleId":"354","severity":1,"message":"487","line":97,"column":20,"nodeType":"356","messageId":"357","endLine":97,"endColumn":29},{"ruleId":"354","severity":1,"message":"488","line":122,"column":16,"nodeType":"356","messageId":"357","endLine":122,"endColumn":20},{"ruleId":"354","severity":1,"message":"420","line":2,"column":43,"nodeType":"356","messageId":"357","endLine":2,"endColumn":55},{"ruleId":"354","severity":1,"message":"471","line":2,"column":60,"nodeType":"356","messageId":"357","endLine":2,"endColumn":65},{"ruleId":"354","severity":1,"message":"365","line":9,"column":10,"nodeType":"356","messageId":"357","endLine":9,"endColumn":17},{"ruleId":"354","severity":1,"message":"472","line":10,"column":8,"nodeType":"356","messageId":"357","endLine":10,"endColumn":12},{"ruleId":"354","severity":1,"message":"473","line":11,"column":8,"nodeType":"356","messageId":"357","endLine":11,"endColumn":17},{"ruleId":"354","severity":1,"message":"474","line":12,"column":8,"nodeType":"356","messageId":"357","endLine":12,"endColumn":20},{"ruleId":"354","severity":1,"message":"475","line":15,"column":10,"nodeType":"356","messageId":"357","endLine":15,"endColumn":24},{"ruleId":"354","severity":1,"message":"476","line":16,"column":8,"nodeType":"356","messageId":"357","endLine":16,"endColumn":14},{"ruleId":"354","severity":1,"message":"477","line":17,"column":8,"nodeType":"356","messageId":"357","endLine":17,"endColumn":23},{"ruleId":"354","severity":1,"message":"478","line":18,"column":8,"nodeType":"356","messageId":"357","endLine":18,"endColumn":14},{"ruleId":"354","severity":1,"message":"410","line":20,"column":10,"nodeType":"356","messageId":"357","endLine":20,"endColumn":17},{"ruleId":"354","severity":1,"message":"479","line":83,"column":11,"nodeType":"356","messageId":"357","endLine":83,"endColumn":18},{"ruleId":"423","severity":1,"message":"424","line":89,"column":43,"nodeType":"425","messageId":"426","endLine":89,"endColumn":45},{"ruleId":"354","severity":1,"message":"375","line":93,"column":21,"nodeType":"356","messageId":"357","endLine":93,"endColumn":31},{"ruleId":"354","severity":1,"message":"480","line":94,"column":12,"nodeType":"356","messageId":"357","endLine":94,"endColumn":19},{"ruleId":"354","severity":1,"message":"481","line":95,"column":11,"nodeType":"356","messageId":"357","endLine":95,"endColumn":20},{"ruleId":"354","severity":1,"message":"447","line":96,"column":12,"nodeType":"356","messageId":"357","endLine":96,"endColumn":19},{"ruleId":"354","severity":1,"message":"489","line":96,"column":21,"nodeType":"356","messageId":"357","endLine":96,"endColumn":31},{"ruleId":"354","severity":1,"message":"490","line":97,"column":12,"nodeType":"356","messageId":"357","endLine":97,"endColumn":24},{"ruleId":"354","severity":1,"message":"491","line":97,"column":26,"nodeType":"356","messageId":"357","endLine":97,"endColumn":41},{"ruleId":"354","severity":1,"message":"484","line":98,"column":12,"nodeType":"356","messageId":"357","endLine":98,"endColumn":28},{"ruleId":"354","severity":1,"message":"485","line":98,"column":30,"nodeType":"356","messageId":"357","endLine":98,"endColumn":49},{"ruleId":"354","severity":1,"message":"486","line":100,"column":12,"nodeType":"356","messageId":"357","endLine":100,"endColumn":18},{"ruleId":"354","severity":1,"message":"487","line":100,"column":20,"nodeType":"356","messageId":"357","endLine":100,"endColumn":29},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["492"],"no-negated-in-lhs",["493"],"'SampleSearch' is defined but never used.","'useCallback' is defined but never used.","'Container' is defined but never used.","'connect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'VisibilityIcon' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'forwardRef' is defined but never used.","'Button' is defined but never used.","'Stack' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'collectedSamples' is assigned a value but never used.","'setCollectedSamples' is assigned a value but never used.","'manifestData' is assigned a value but never used.","'saved' is assigned a value but never used.","'setSaved' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sampleObj'. Either include it or remove the dependency array.","ArrayExpression",["494"],"'Box' is defined but never used.","'Typography' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'makeStyles' is defined but never used.","'labObj' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormGroup' is defined but never used.","'classes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","'onError' is assigned a value but never used.","no-dupe-keys","Duplicate key 'age'.","ObjectExpression","'Table' is defined but never used.","'MaterialTable' is defined but never used.","'Spinner' is defined but never used.","'toast' is defined but never used.","'tableIcons' is assigned a value but never used.","'permissions' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'manifestObj.id'. Either include it or remove the dependency array.",["495"],"'resultTestType' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'CardBody' is defined but never used.","'FormFeedback' is defined but never used.","'FormText' is defined but never used.","'Badge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'MatButton' is defined but never used.","'HomeIcon' is defined but never used.","'AddResultModal' is defined but never used.","'CachedIcon' is defined but never used.","'manifestObj' is assigned a value but never used.","'PhoneInput' is defined but never used.","'SendIcon' is defined but never used.","'samples' is assigned a value but never used.","'send' is assigned a value but never used.","'setSend' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'MdDashboard' is defined but never used.","'MdDeleteForever' is defined but never used.","'MdPerson' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'alpha' is defined but never used.","'Card' is defined but never used.","'SaveIcon' is defined but never used.","'CancelIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'FaUserPlus' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'ListItemText' is defined but never used.","'ListItemIcon' is defined but never used.","'ContentCut' is defined but never used.","'FaEye' is defined but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'Alert' is defined but never used.","'Chip' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'DateTimePicker' is defined but never used.","'Moment' is defined but never used.","'momentLocalizer' is defined but never used.","'moment' is defined but never used.","'history' is assigned a value but never used.","'visible' is assigned a value but never used.","'onDismiss' is assigned a value but never used.","'config' is assigned a value but never used.","'setConfig' is assigned a value but never used.","'saveButtonStatus' is assigned a value but never used.","'setSaveButtonStatus' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'name' is assigned a value but never used.","'setSamples' is assigned a value but never used.","'optionsample' is assigned a value but never used.","'setOptionsample' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},"Update the dependencies array to be: [sampleObj]",{"range":"500","text":"501"},"Update the dependencies array to be: [manifestObj.id]",{"range":"502","text":"503"},[3088,3090],"[sampleObj]",[5554,5556],"[manifestObj.id]"]